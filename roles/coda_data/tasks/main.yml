---

 - block:

     - name: "FAIL | CHECK BLOCK DEVICES REQUIREMENTS"
       fail:
         msg: "FAIL: YOU MUST HAVE ENOUGH BLOCK DEVICES TO CONTINUE, FOUND: {{ ansible_devices.keys() | length | int }} NEEDED: {{ _data_min_block_devices }}"
       when: ansible_devices.keys() | length | int < _data_min_block_devices and _data_enabled

#     # We need to dynamically configure LVM here and it can't be done at group_vars level.
#     # Simply because we refer to an ansible_device at index 1, that maybe is not existing at parse time.
#     # We want to fail here, just in time when we manage storage devices.

     - name: INCLUDE_ROLE | CODA_LVM
       include_role:
         name: coda_lvm
       vars:
         coda_lvm_enabled: yes

         _data_block_device_hc:
           "{{ _data_block_device | default('') }}"

         coda_previous_data_installation_disk:
           "{{ (ansible_lvm.pvs | dict2items | selectattr('value.vg','match','VGData') | list | items2dict).keys()|join('')}}"

         coda_second_disk:
           "{{  '/dev/' + ((ansible_devices.keys() | select('match','^[vs]d') | list | sort )[1]) | join ('') }}"

         coda_default_data_disk:
           "{{ (coda_previous_data_installation_disk=='') | ternary(_data_block_device_hc,coda_previous_data_installation_disk) }}"

         coda_lvm_groups:
         - vgname: VGData
           disks:
             # Find which block device to use for /data partition:
             #   - If disk was previously setup use it. #This was added because of issue with Rocky Linux 9 and vmware which might switch /sdb to /sda
             #   - If _data_block_device is defined, use it;
             #   - If not, simply use the second device.
             #     We assume that all devices are all of same type (sda,sdb; vda,vdb).
             - "{{ (coda_default_data_disk=='') | ternary(coda_second_disk,coda_default_data_disk) }}"

             create: true

             lvnames:
               - lvname: LVData
                 size: +100%FREE
                 create: true
                 filesystem: xfs
                 mount: true
                 mount_point: /data

   when: _data_enabled
   tags:
     - _data

#### With or without supplemental block devices, always create the /data folder with good permissions
 - name: FILE | Ensure /data folder exists with good permissions
   file:
     path: /data
     state: directory
     owner: root
     group: root
     mode: 0755
   tags:
     - always
     - _data
